@using Microsoft.AspNetCore.Components;
@inherits LayoutComponentBase
@inject NavigationManager _NavigationManager
@inject IDialogService DialogService
<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
        <MudAppBar Elevation="1">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
            <MudText Typo="Typo.h5" Class="ml-3 text">MCM</MudText>
            <MudSpacer />
           
           @* <MudMenu Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopCenter">
                <MudMenuItem Icon="@Icons.Material.Filled.Logout" OnClick="Logout">Logout</MudMenuItem>
            </MudMenu>*@
        </MudAppBar>
        <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
            <NavMenu />
        </MudDrawer>
        <MudMainContent>
            <MudContainer MaxWidth="MaxWidth.ExtraLarge">
                @Body
            </MudContainer>
        </MudMainContent>
</MudLayout>

@code {
    [Inject] ISnackbar Snackbar { get; set; }
    private bool isUserLoggedIn = false;
    private string BoxCss = "none";
    private string authMessage;
    private int count;
    private string surname;
    private string Userid;
    bool _drawerOpen = true;
    public bool Isshow { get; set; }

    private async Task Logout()
    {
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }


    private async Task ErrorTriggerMessage(Exception exception)
    {
        if (exception is not null)
        {
            Snackbar.Add(string.Concat(exception.Message, Environment.NewLine, exception.StackTrace), Severity.Error);
        }
    }
}